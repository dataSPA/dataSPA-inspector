{"version":3,"file":"dataspa-inspector.js","sourceRoot":"","sources":["src/dataspa-inspector.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css, nothing} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport {\n  bracketsIcon,\n  clipboardIcon,\n  consoleIcon,\n  htmlIcon,\n  replayIcon,\n  serverSignalsIcon,\n  signalsIcon,\n  tableIcon,\n  toggleOffIcon,\n  toggleOnIcon,\n} from './snippets';\n\nconst DATASPA_FETCH_EVENT = 'datastar-fetch';\n\ntype HTMLOrSVG = Element & (HTMLElement | SVGElement);\n\ntype DSSSEEvent = {\n  id: string;\n  type: string;\n  argsRaw: Record<string, string>;\n  el: HTMLOrSVG;\n};\n\n@customElement('dataspa-inspector')\nexport class DataSPAInspector extends LitElement {\n  // @query('#sortable-container')\n  // sortContainer!: HTMLElement\n\n  @property({type: Object}) signals = {};\n\n  @state()\n  panel = 'signals';\n\n  highlightClassName = '__dataSPAHighlight';\n\n  @state()\n  elementPatchEvents: DSSSEEvent[] = [];\n\n  @state()\n  signalPatchEvents: DSSSEEvent[] = [];\n\n  @state()\n  maxPatchEvents = 20;\n\n  @state()\n  maxSignalEvents = 20;\n\n  @state()\n  signalTableNotObject = false;\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    if (!document.getElementById('__dataSPAHighlightStyle')) {\n      const style = document.createElement('style');\n      style.id = '__dataSPAHighlightStyle';\n      style.textContent = `\n        .${this.highlightClassName} {\n          outline: 3px solid magenta !important;\n          outline-offset: -3px !important;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n    document.addEventListener(\n      DATASPA_FETCH_EVENT,\n      this.datastarFetchHandler as EventListener\n    );\n    this.setAttribute('data-attr-signals', '$');\n  }\n\n  static override styles = css`\n    .signals-footer {\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      gap: 5px;\n      padding-top: 5px;\n    }\n    .active {\n      background-color: #d55634;\n      border: none;\n    }\n\n    header button {\n      display: flex;\n      align-items: center;\n      gap: 5px;\n    }\n\n    hr {\n      margin: 1px;\n      padding: 0;\n      background-color: black;\n      border: none;\n      height: 1px;\n    }\n\n    .container {\n      position: fixed;\n      display: block;\n      bottom: 5px;\n      right: 5px;\n      background: grey;\n      opacity: 0.9;\n      border-radius: 0.5rem;\n      max-width: 50vw;\n    }\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 5px 3px 3px 3px;\n    }\n    footer {\n      padding: 0 5px 0.5rem 5px;\n    }\n\n    .nav {\n      display: flex;\n      justify-content: space-between;\n      gap: 1rem;\n    }\n\n    .nav > div:nth-child(2) {\n      display: flex;\n      flex-direction: row;\n      gap: 10px;\n    }\n\n    .signals {\n      overflow-x: scroll;\n      padding: 0 5px;\n    }\n\n    .signals table {\n      width: 100%;\n      border-collapse: collapse;\n      padding-top: 5px;\n      margin-right: 5px;\n    }\n\n    .signals td {\n      white-space: nowrap;\n    }\n\n    .sse {\n      overflow: scroll;\n      padding: 0 5px;\n      min-height: 100px;\n      max-height: 30vh;\n    }\n\n    .actions {\n      display: flex;\n      position: sticky;\n      right: 0;\n      background-color: grey;\n      flex-direction: row;\n      gap: 3px;\n      height: 20px;\n    }\n\n    svg {\n      height: 20px;\n    }\n\n    .event-row {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      gap: 10px;\n    }\n\n    .event-row pre {\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      padding: 2px;\n      margin: 0;\n    }\n  `;\n\n  datastarFetchHandler = (evt: CustomEvent) => {\n    const {detail} = evt;\n    if (\n      !detail ||\n      !['datastar-patch-elements', 'datastar-patch-signals'].includes(\n        detail.type\n      )\n    ) {\n      return;\n    }\n    if (detail.inspectorReplayed!) {\n      return;\n    }\n    switch (detail.type) {\n      case 'datastar-patch-elements':\n        this.elementPatchEvents = [...this.elementPatchEvents, detail];\n        if (this.elementPatchEvents.length > this.maxPatchEvents) {\n          this.elementPatchEvents = this.elementPatchEvents.slice(1);\n        }\n        break;\n      case 'datastar-patch-signals':\n        this.signalPatchEvents = [...this.signalPatchEvents, detail];\n        if (this.signalPatchEvents.length > this.maxSignalEvents) {\n          this.signalPatchEvents = this.signalPatchEvents.slice(1);\n        }\n        break;\n    }\n  };\n\n  replayEvent(sseEvent: DSSSEEvent) {\n    return (_: Event) => {\n      document.dispatchEvent(\n        new CustomEvent(DATASPA_FETCH_EVENT, {\n          detail: {...sseEvent, inspectorReplayed: true},\n        })\n      );\n    };\n  }\n\n  sendToConsole(signal: any) {\n    return (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      console.table(signal);\n    };\n  }\n\n  sendToClipboard(signal: any) {\n    return (evt: Event) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(JSON.stringify(signal, null, 2));\n      }\n    };\n  }\n\n  highlightSignal(signal: any) {\n    return () => {\n      // this.dispatchEvent(new CustomEvent('dataspa-highlight-signal', { detail: signal }))\n\n      const xpath = `//*[ @*[starts-with(name(), 'data-') and contains(., '$${signal}')] ]`;\n      const snapshot = document.evaluate(\n        xpath,\n        document,\n        null,\n        XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n        null\n      );\n\n      const results = [];\n      for (let i = 0; i < snapshot.snapshotLength; i++) {\n        results.push(snapshot.snapshotItem(i));\n        // Apply highlight class\n        const element = snapshot.snapshotItem(i) as HTMLElement;\n        element.classList.add(this.highlightClassName);\n      }\n    };\n  }\n\n  unhighlightSignal() {\n    let elements = document.getElementsByClassName(this.highlightClassName);\n    let elems = Array.from(elements);\n    for (const element of elems) {\n      element.classList.remove(this.highlightClassName);\n    }\n  }\n\n  signalDetails(signal: DSSSEEvent) {\n    if (!signal) {\n      return '';\n    }\n    if (!signal.argsRaw) {\n      return '';\n    }\n    if (!signal.argsRaw.signals) {\n      return '';\n    }\n\n    return JSON.stringify(JSON.parse(signal.argsRaw.signals), null, 2);\n  }\n\n  documentFragmentFromEvent(event: DSSSEEvent): DocumentFragment | null {\n    if (!event) {\n      return null;\n    }\n    if (!event.argsRaw) {\n      return null;\n    }\n    if (!event.argsRaw.elements) {\n      return null;\n    }\n\n    const detailContent = event.argsRaw.elements;\n    const elementsWithSvgsRemoved = detailContent.replace(\n      /<svg(\\s[^>]*>|>)([\\s\\S]*?)<\\/svg>/gim,\n      ''\n    );\n    const hasHtml = /<\\/html>/.test(elementsWithSvgsRemoved);\n    const hasHead = /<\\/head>/.test(elementsWithSvgsRemoved);\n    const hasBody = /<\\/body>/.test(elementsWithSvgsRemoved);\n\n    const newDocument = new DOMParser().parseFromString(\n      hasHtml || hasHead || hasBody\n        ? detailContent\n        : `<body><template>${detailContent}</template></body>`,\n      'text/html'\n    );\n    let newContent = document.createDocumentFragment();\n    if (hasHtml) {\n      newContent.appendChild(newDocument.documentElement);\n    } else if (hasHead && hasBody) {\n      newContent.appendChild(newDocument.head);\n      newContent.appendChild(newDocument.body);\n    } else if (hasHead) {\n      newContent.appendChild(newDocument.head);\n    } else if (hasBody) {\n      newContent.appendChild(newDocument.body);\n    } else {\n      newContent = newDocument.querySelector('template')!.content;\n    }\n\n    return newContent;\n  }\n\n  getSelectors(evt: DSSSEEvent): string[] {\n    if (!evt) {\n      return [];\n    }\n\n    if (evt.argsRaw && evt.argsRaw.selector) {\n      return [evt.argsRaw.selector];\n    }\n\n    let selectors: string[] = [];\n\n    const detailDocument = this.documentFragmentFromEvent(evt);\n\n    if (!detailDocument) {\n      return selectors;\n    }\n\n    for (const child of detailDocument.children) {\n      if (child instanceof HTMLHtmlElement) {\n        selectors.push('DOCUMENT');\n      } else if (child instanceof HTMLBodyElement) {\n        selectors.push('BODY');\n      } else if (child instanceof HTMLHeadElement) {\n        selectors.push('HEAD');\n      } else {\n        selectors.push(`#${child.id}`);\n      }\n    }\n\n    return selectors;\n  }\n\n  summaryForSignalEvent(event: DSSSEEvent): string {\n    if (!event) {\n      return 'UNKNOWN';\n    }\n\n    if (!event.argsRaw || !event.argsRaw.signals) {\n      return 'UNKNOWN';\n    }\n\n    const obj = JSON.parse(event.argsRaw.signals);\n    const result = Object.keys(obj).reduce(function (r, k) {\n      return r.concat([k]);\n    }, [] as string[]);\n\n    return result.join(', ');\n  }\n\n  summaryForElementEvent(event: DSSSEEvent): string {\n    const selectors = this.getSelectors(event);\n    return `${selectors.join(', ')}`;\n  }\n\n  htmlFromEvent(event: DSSSEEvent): string {\n    const docFragment = this.documentFragmentFromEvent(event);\n\n    if (!docFragment) {\n      return '';\n    }\n\n    const serializer = new XMLSerializer();\n    const xmlnAttribute = ' xmlns=\"http://www.w3.org/1999/xhtml\"';\n    const regEx = new RegExp(xmlnAttribute, 'g');\n    let newStr = serializer.serializeToString(docFragment);\n    newStr = newStr.replace(regEx, '');\n    return newStr;\n  }\n\n  renderSSE() {\n    return html`\n      <div class=\"sse\">\n        ${this.elementPatchEvents.map(\n          (event) => html`\n            <div class=\"event-row\">\n              <details>\n                <summary>${this.summaryForElementEvent(event)}</summary>\n                <pre>${this.htmlFromEvent(event)}</pre>\n              </details>\n              <div class=\"actions\">\n                <span @click=\"${this.replayEvent(event)}\">${replayIcon}</span>\n                <span @click=\"${this.sendToConsole(event)}\"\n                  >${consoleIcon}</span\n                >\n                <span @click=\"${this.sendToClipboard(event)}\"\n                  >${clipboardIcon}</span\n                >\n              </div>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  renderServerSignals() {\n    return html`\n      <div class=\"sse\">\n        ${this.signalPatchEvents.map(\n          (event) => html`\n            <div class=\"event-row\">\n              <details>\n                <summary>${this.summaryForSignalEvent(event)}</summary>\n                <pre>${this.signalDetails(event)}</pre>\n              </details>\n              <div class=\"actions\">\n                <span @click=\"${this.replayEvent(event)}\">${replayIcon}</span>\n                <span @click=\"${this.sendToConsole(event)}\"\n                  >${consoleIcon}</span\n                >\n                <span @click=\"${this.sendToClipboard(event)}\"\n                  >${clipboardIcon}</span\n                >\n              </div>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  renderSignals() {\n    return html`\n      <div class=\"signals\">\n        ${this.signalTableNotObject\n          ? html`\n              <pre>\n${JSON.stringify(this.signals, null, 2)}\n            </pre\n              >\n            `\n          : html`\n              <table>\n                <tbody>\n                  ${map(\n                    Object.entries(this.signals),\n                    (key, _) => html`\n                      <tr\n                        @touchstart=\"${this.highlightSignal(key[0])}\"\n                        @mouseenter=\"${this.highlightSignal(key[0])}\"\n                        @mouseleave=\"${this.unhighlightSignal}\"\n                      >\n                        <td>${key[0]}</td>\n                        <td>\n                          <div>${JSON.stringify(key[1])}</div>\n                        </td>\n                        <td class=\"actions\">\n                          <span @click=\"${this.sendToConsole(key[1])}\"\n                            >${consoleIcon}</span\n                          >\n                          <span @click=\"${this.sendToClipboard(key[1])}\"\n                            >${clipboardIcon}</span\n                          >\n                        </td>\n                      </tr>\n                    `\n                  )}\n                </tbody>\n              </table>\n            `}\n      </div>\n    `;\n  }\n\n  setMaxSignalEvents(event: Event) {\n    let newValue = parseInt((event.target as HTMLInputElement).value);\n    if (isNaN(newValue)) return;\n    if (\n      newValue < this.maxSignalEvents &&\n      this.signalPatchEvents.length > newValue\n    ) {\n      this.signalPatchEvents = this.signalPatchEvents.slice(\n        this.maxSignalEvents - newValue\n      );\n    }\n    this.maxSignalEvents = newValue;\n  }\n\n  setMaxSSEEvents(event: Event) {\n    let newValue = parseInt((event.target as HTMLInputElement).value);\n    if (isNaN(newValue)) return;\n    if (\n      newValue < this.maxPatchEvents &&\n      this.elementPatchEvents.length > newValue\n    ) {\n      this.elementPatchEvents = this.elementPatchEvents.slice(\n        this.maxPatchEvents - newValue\n      );\n    }\n    this.maxPatchEvents = newValue;\n  }\n\n  clearSSEEvents() {\n    this.elementPatchEvents = [];\n  }\n\n  clearSignalEvents() {\n    this.signalPatchEvents = [];\n  }\n\n  renderSSEFooter() {\n    return html`\n      <div class=\"sse-footer\">\n        <label for=\"max-events\"\n          >Max Events:\n          <input\n            type=\"number\"\n            id=\"max-events\"\n            min=\"1\"\n            max=\"1000\"\n            value=\"${this.maxPatchEvents}\"\n            @input=\"${this.setMaxSSEEvents}\"\n          />\n        </label>\n        <button @click=\"${this.clearSSEEvents}\">Clear</button>\n      </div>\n    `;\n  }\n\n  renderSignalsFooter() {\n    return html`\n      <div\n        class=\"signals-footer\"\n        @click=\"${() =>\n          (this.signalTableNotObject = !this.signalTableNotObject)}\"\n      >\n        ${bracketsIcon}\n        ${this.signalTableNotObject ? toggleOnIcon : toggleOffIcon} ${tableIcon}\n      </div>\n    `;\n  }\n\n  renderServerSignalsFooter() {\n    return html`\n      <div class=\"sse-footer\">\n        <label for=\"max-events\"\n          >Max Events:\n          <input\n            type=\"number\"\n            id=\"max-events\"\n            min=\"1\"\n            max=\"1000\"\n            value=\"${this.maxSignalEvents}\"\n            @input=\"${this.setMaxSignalEvents}\"\n          />\n        </label>\n        <button @click=\"${this.clearSignalEvents}\">Clear</button>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    let panel: Function;\n    let footer: Function;\n    switch (this.panel) {\n      case 'signals':\n        panel = this.renderSignals.bind(this);\n        footer = this.renderSignalsFooter.bind(this);\n        break;\n      case 'server-signals':\n        panel = this.renderServerSignals.bind(this);\n        footer = this.renderServerSignalsFooter.bind(this);\n        break;\n      case 'sse':\n        panel = this.renderSSE.bind(this);\n        footer = this.renderSSEFooter.bind(this);\n        break;\n      default:\n        panel = this.renderSignals.bind(this);\n        footer = this.renderSignalsFooter.bind(this);\n    }\n    return html`\n      <div class=\"container\">\n        <header class=\"nav\">\n          <div>dataSPA Inspector</div>\n          <div>\n            <button\n              @click=\"${() => (this.panel = 'signals')}\"\n              class=${this.panel === 'signals' ? 'active' : nothing}\n            >\n              ${signalsIcon}\n            </button>\n            <button\n              @click=\"${() => (this.panel = 'server-signals')}\"\n              class=${this.panel === 'server-signals' ? 'active' : nothing}\n            >\n              ${serverSignalsIcon} ${this.signalPatchEvents.length}\n            </button>\n            <button\n              @click=\"${() => (this.panel = 'sse')}\"\n              class=${this.panel === 'sse' ? 'active' : nothing}\n            >\n              ${htmlIcon} ${this.elementPatchEvents.length}\n            </button>\n          </div>\n        </header>\n        <hr />\n        ${panel()}\n        <hr />\n        <footer>${footer()}</footer>\n      </div>\n    `;\n  }\n}\n"]}